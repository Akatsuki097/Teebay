type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  phone: String
  address: String
  password: String!

  # Added: list of products created by the user
  products: [Product]!
}

input RegisterInput {
  firstName: String!
  lastName: String!
  email: String!
  phone: String
  address: String
  password: String!
}

type AuthPayload {
  token: String!
  user: User!
}


enum Category {
  ELECTRONICS
  FURNITURE
  HOME_APPLIANCES
  SPORTING_GOODS
  OUTDOOR
  TOYS
}

type Product {
  id: ID!
  title: String!
  category: Category!
  description: String
  price: Float!
  summary: String

  # Add the creator linkage
  createdBy: User!
}

input ProductInput {
  title: String!
  category: Category!
  description: String
  price: Float!
  summary: String
}

type Query {
  allUsers: [User]!

  # PRODUCT QUERIES
  
  allProducts: [Product]!
  productById(id: ID!): Product
  myProducts: [Product]!
}

type Mutation {
  register(input: RegisterInput!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!

   # PRODUCT CRUD
  
  createProduct(input: ProductInput!): Product!
  updateProduct(id: ID!, input: ProductInput!): Product!
  deleteProduct(id: ID!): Boolean!

}